load("@aspect_rules_js//js:defs.bzl", "js_run_devserver")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@npm//my-app:@sveltejs/kit/package_json.bzl", sveltejs_kit_bin = "bin")
load("@npm//my-app:vite/package_json.bzl", vite_bin = "bin")
load("@npm//my-app:vitest/package_json.bzl", vitest_bin = "bin")

npm_link_all_packages(name = "node_modules")

filegroup(
    name = "src",
    srcs = glob(["src/**/*.*"]),
)

filegroup(
    name = "static",
    srcs = glob(["static/**/*.*"]),
)

# Executes `svelte-kit sync` which creates `.svelte-kit` folder
sveltejs_kit_bin.svelte_kit(
    name = "sync",
    srcs = [
        # Configs
        "vite.config.ts",
        "package.json",
        "tsconfig.json",
        "svelte.config.js",

        # Build deps
        ":node_modules",  # TODO: Use //:node_modules instead

        # Sources
        ":src",
        ":static",
    ],
    out_dirs = [".svelte-kit",],
    # outs = [
    #     ".svelte-kit/ambient.d.ts",
    #     ".svelte-kit/non-ambient.d.ts",
    #     ".svelte-kit/tsconfig.json",
    #     ".svelte-kit/types/route_meta_data.json",
    #     ".svelte-kit/types/src/routes/$types.d.ts",
    # ],
    args = ["sync"],
    chdir = package_name(),
    visibility = ["//visibility:public"],
)

# This target (bazel build) executes 'vite build' and generates an empty 'dist'
# folder in 'bazel-bin'. I guess this should create the [build for production](https://vitejs.dev/guide/cli.html#vite-build),
# but the folder is empty.
#
# FIXME: What is the expected output of this command? Is this the equivalent to a 'build'?
vite_bin.vite(
    name = "build",
    srcs = [
        # Configs
        "vite.config.ts",
        "package.json",
        "tsconfig.json",
        "svelte.config.js",

        # Build deps
        ":node_modules",  # TODO: Use //:node_modules instead

        # Sources
        ":src",
        ":static",
    ],
    args = ["build --config vite.config.ts"],
    chdir = package_name(),
    out_dirs = ["dist"],
    visibility = ["//visibility:public"],
)

# This target (use `bazel run`) executes `vite dev` which starts the development server
# at 'http://localhost:5173/' with live CLI output!.
#
# However as Bazel moves its files out of the WORKSPACE into build directories,
# hot reloading doesn't work.
#
# We could use 'ibazel' to rerun this target whenever sources change, but it doesn't work
# with MODULE.bazel file (FIXME: https://github.com/bazelbuild/bazel-watcher/pull/647)
js_run_devserver(
    name = "devserver",
    args = ["dev --config vite.config.ts"],
    chdir = package_name(),
    command = "./node_modules/.bin/vite",
    data = [
        ":sync",

        # Configs
        "vite.config.ts",
        "package.json",
        "tsconfig.json",
        "svelte.config.js",

        # Build deps
        ":node_modules",  # TODO: Use //:node_modules instead

        # Sources
        ":src",
        ":static",
    ],
    grant_sandbox_write_permissions = True,
)

vitest_bin.vitest_test(
    name = "vitest",
    args = [
        "run",
        "--config=vite.config.ts",
    ],
    chdir = package_name(),
    data = [
        ":sync",

        # Configs
        "vite.config.ts",
        "package.json",
        "tsconfig.json",
        "svelte.config.js",

        # Build deps
        ":node_modules",  # TODO: Use //:node_modules instead

        # Sources
        ":src",
        ":static",
    ] + glob(["src/**/*.test.ts"]),
    # grant_sandbox_write_permissions = True,
)

js_run_devserver(
    name = "vitest2",
    args = ["run --config vite.config.ts"],
    chdir = package_name(),
    command = "./node_modules/.bin/vitest",
    data = [
        ":sync",

        # Configs
        "vite.config.ts",
        "package.json",
        "tsconfig.json",
        "svelte.config.js",

        # Build deps
        ":node_modules",  # TODO: Use //:node_modules instead

        # Sources
        ":src",
        ":static",
    ] + glob(["src/**/*.test.ts"]),
    grant_sandbox_write_permissions = True,
)

sh_test(
    name = "test",
    srcs = ["test.sh"],
    data = [
        ":vitest2",
    ],
    args = [
        "$(location :vitest2)"
    ]
)